      <!-- ===== KPI（平均と順位） ===== -->
      <section class="headline">
        <div class="headline__label">違反疑い割合平均</div>
        <div class="headline__value"><%= (report.avgViolationRatePct ?? 10.9) %>%</div>
        <div class="headline__rank">(<%= (report.rank?.total ?? 10) %>人中<%= (report.rank?.position ?? 8) %>位)</div>
      </section>

      <!-- ===== ハイライト3カード ===== -->
      <section class="highlights">
        <% const cards = report.highlights_gaiyou || []; %>
        <% cards.forEach(c => { %>
          <article class="hl hl--<%= c.kind %>">
            <div class="hl__band"><%= c.badge %></div>
            <h2 class="hl__title"><%= c.title %></h2>
            <p class="hl__text"><%= c.text %></p>
          </article>
        <% }) %>
      </section>

      <% const groups = report.sections || []; %>
      <% groups.forEach(g => { %>
        <table class="group-table">
          <thead>
            <tr>
              <th class="cell--no"><%= g.title %></th>
              <th class="cell--name">項目</th>
              <th class="cell--tag">指導提案</th>
              <th class="cell--rate">違反疑い割合</th>
              <th class="cell--count">危険疑い回数</th>
              <th class="cell--page">詳細</th>
            </tr>
          </thead>
          <tbody>
            <% g.rows.forEach(r => { %>
              <tr class="<%= r.tone ? 'row--' + r.tone : '' %>">
                <td class="cell--no">
                  <% if (r.no !== "") { %>
                    <span class="no"><%= r.no %></span>
                  <% } else { %>
                    -
                  <% } %>
                </td>
                <td class="cell--name"><%= r.name %></td>
                <td class="cell--tag"><%= r.tag || '-' %></td>
                <td class="cell--rate">
                  <% if (r.rate !== "" && r.rate !== null && r.rate !== undefined) { %>
                    <strong class="rate"><%= r.rate %>%</strong>
                    <div class="detail"><%= r.detail %></div>
                  <% } else { %>
                    -
                  <% } %>
                </td>
                <td class="cell--count">
                  <% if (r.risk !== "" && r.risk !== null && r.risk !== undefined) { %>
                    <strong><%= r.risk %>回</strong>
                  <% } else { %>
                    -
                  <% } %>
                </td>
                <td class="cell--page">
                  <% const dynPageNum = (typeof r.pageNumber === 'number') ? r.pageNumber : null; %>
                  <% if (dynPageNum) { %>
                    <a class="btn" href="#<%= report.driverId %>-page-<%= dynPageNum %>"><%= dynPageNum %>ページ ▶</a>
                  <% } else { %>
                    <span class="btn" style="opacity:.7;">ページなし</span>
                  <% } %>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      <% }) %>
      <div class="summary-frame">
        <div class="summary-column left-column">
          <p>BOX動画再生 確認用</p>
        </div>
        <div class="summary-column right-column">
          <a href="https://app.box.com/file/1962444890135?s=g215xtzrz2unrh1cvn4595xf079dm8p0" target="_blank" class="play-button-mock">
            <span class="play-icon">▶</span>
          </a>
        </div>
      </div>
      <% 
        // Static Maps: compute URL if key + points exist
        const key = typeof staticMapKey === 'string' ? staticMapKey : '';
        const pts = Array.isArray(report.mapPoints) ? report.mapPoints : [];
        const validPts = pts.filter(p => Number.isFinite(p.lat) && Number.isFinite(p.lon));
        const maxMarkers = 60; // limit to avoid URL length issues
        const usePts = validPts.slice(0, maxMarkers);
        const size = '640x400';
        let mapUrl = '';
        if (key && usePts.length > 0) {
          const markers = usePts.map(p => `${p.lat},${p.lon}`).join('|');
          mapUrl = `https://maps.googleapis.com/maps/api/staticmap?size=${size}&maptype=roadmap&markers=color:red|${markers}&key=${key}`;
        }
        // Fallback interactive Maps URL (first point) so the button is always clickable
        // Prefer server-produced Google Maps KML link if available (multiple pins, no API key)
        let fallbackUrl = (report.kmlLink || 'https://www.google.com/maps');
        if (!mapUrl && !report.kmlLink && usePts.length > 0) {
          const p = usePts[0];
          fallbackUrl = `https://www.google.com/maps/search/?api=1&query=${p.lat},${p.lon}`;
        }
      %>
      <div class="summary-frame" style="margin-top: 8px;">
        <div class="summary-column left-column">
          <p>地図表示（静的）</p>
        </div>
        <div class="summary-column right-column">
          <a href="<%= mapUrl || fallbackUrl %>" target="_blank" class="play-button-mock" title="違反地点を地図ですべて確認（確認用）">
            <span class="play-icon">🗺️</span>
          </a>
          <div style="margin-top:4px; text-align:right;">
            <a href="<%= mapUrl || fallbackUrl %>" target="_blank" class="btn">違反地点を地図ですべて確認（確認用）</a>
          </div>
        </div>
      </div>
